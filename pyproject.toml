# Default tool config file. See also setup.cfg for tools that don't yet
# support pyproject.toml.

[tool.black]
line-length = 88
target-version = ['py311']
skip-string-normalization = true
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | __pycache__
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
# Some isort functionality is replicated in ruff, which should have matching config
profile = 'black'
multi_line_output = 3
include_trailing_comma = true
line_length = 88
order_by_type = true
use_parentheses = true
combine_as_imports = true
split_on_trailing_comma = false
extra_standard_library = ['typing_extensions']
known_repo = ['imgee']
known_first_party = ['baseframe', 'coaster', 'flask_lastuser']
default_section = 'THIRDPARTY'
sections = [
  'FUTURE',
  'STDLIB',
  'THIRDPARTY',
  'FIRSTPARTY',
  'REPO',
  'LOCALFOLDER',
]

[tool.pytest.ini_options]
minversion = "6.1" # For config.rootpath
required_plugins = [
  'pytest-cov',
  'pytest-dotenv',
  'pytest-env',
  'pytest-rerunfailures',
  'pytest-socket',
  'requests-mock',
]
addopts = [
  '--cov-report=term-missing',
  '--disable-socket',
  '--allow-unix-socket',         # Required for Selenium driver
  '--allow-hosts=127.0.0.1,::1', # Add Docker IPs here
  '--strict-markers',
]
env = ['FLASK_ENV=testing', 'FLASK_TESTING=true']
env_override_existing_values = false
env_files = ['.env.testing', '.testenv', '.env', '.flaskenv']

[tool.bandit]
exclude_dirs = ['node_modules']

[tool.bandit.assert_used]
skips = ['**/*_test.py', '**/test_*.py', '**/conftest.py']

[tool.ruff]

# Same as Black.
line-length = 88

# Target Python 3.11
target-version = "py311"

[tool.ruff.format]
docstring-code-format = true
quote-style = "preserve"

[tool.ruff.lint]
select = ["A", "BLE", "C4", "E", "F", "I", "G", "N", "T20"]
ignore = [
  "D105",
  "D106",
  "D107",
  "D203",
  "D212",
  "D213",
  "E402",
  "E501",
  "EM101",
  "EM102",
  "ISC001",
  "RUF012",
]

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

[tool.ruff.lint.isort]
# These config options should match isort config above under [tool.isort]
combine-as-imports = true
extra-standard-library = ['typing_extensions']
split-on-trailing-comma = false
relative-imports-order = 'furthest-to-closest'
known-first-party = ['baseframe', 'coaster', 'flask_lastuser']
section-order = [
  'future',
  'standard-library',
  'third-party',
  'first-party',
  'repo',
  'local-folder',
]

[tool.ruff.lint.isort.sections]
repo = ['imgee']
